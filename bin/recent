#!/usr/bin/env perl

use strict;
use warnings;
use Cwd ();
use File::Spec::Functions qw(catfile catdir);
use File::Basename qw(basename);
use lib File::Basename::dirname __FILE__;
use lib catfile($ENV{ROOT}, 'bin');
use Misc qw(dirname assert note warning error fatal internal);
sub list_recent();
sub add_to_recent();
$| = 1;
#my $OPT = Misc::getopt(
#    {args => 0},
#    '
#Track recent directories we have worked in.
#With no options, add current directory as most recent.',
#    'list' => '',
#    'opt=s<str>'   => 'description of -opt=<str>',
#);

my $RECENT = "$ENV{HOME}/recent";
mkdir($RECENT);

if (@ARGV == 0) {
    add_to_recent();
} elsif ("@ARGV" eq 'list') {
    list_recent();
} else {
    die "Usage: $0 [list]\n";
}
exit;

sub list_recent() {
    chdir($RECENT);
    for my $x (reverse(0 .. 9)) {
        next unless -e $x;
        my $dir = readlink($x);
        $dir =~ s#^\.\./#~/#;
        printf "%2d  %s\n", $x, $dir;
    }

}

sub add_to_recent() {
    my $dir = File::Spec::Functions::abs2rel(Cwd::getcwd(), $RECENT);
    chdir($RECENT);
    my $curr = $dir;
    for my $x (0 .. 9) {
        my $prev = readlink($x);
        unlink($x);
        symlink($curr, $x);
        last unless defined $prev;
        last if $prev eq $curr;
        $curr = $prev;
    }
}
